name: zap python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Setup dsvpwa
        run: |
          pwd
          ls -l
          nohup python ./dsvpwa.py &
          sleep 5
          curl -v http://localhost:65413

      - name: Prepare ZAP Environment
        run: |
          sudo mkdir -p /zap/wrk
          sudo chown -R $USER:$USER /zap
          sudo chmod -R 755 /zap

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:65413/'
          cmd_options: '-I'
          rules_file_name: '.zap/rules.tsv'
          allow_issue_writing: false
          fail_action: false

      - name: Upload ZAP Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: zap-results
          path: |
            zap-*
            *.html
          retention-days: 5

  dependency_check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Create reports directory
        run: mkdir -p reports

      - name: Run OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check \
          -Dformat=HTML \
          -DoutputDirectory=reports \
          -DsuppressionFile=suppression.xml || true

      - name: Upload Dependency Check Results
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-results
          path: reports/dependency-check-report.html
          retention-days: 14

#  publish_security_reports:
#    needs: [semgrep, zap_scan, dependency_check]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Create reports directory
#        run: mkdir -p combined-reports
#
#      - name: Download all artifacts
#        uses: actions/download-artifact@v3
#        with:
#          path: combined-reports
#
#      - name: Prepare reports
#        run: |
#          cd combined-reports
#          find . -type f -exec mv {} ./ \;
#          rm -rf */
#
#      - name: Archive Security Results
#        uses: actions/upload-artifact@v3
#        with:
#          name: security-reports-bundle
#          path: combined-reports/*
#          retention-days: 14
