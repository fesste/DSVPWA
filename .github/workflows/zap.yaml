name: zap python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install flake8 pytest
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#      - name: Lint with flake8
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Setup dsvpwa
        run: |
          pwd
          ls -l
          nohup python ./dsvpwa.py &
          sleep 5
#          curl -v http://localhost:65413 || true

      - name: Prepare ZAP Environment
        run: |
          sudo mkdir -p /zap/wrk
          sudo chown -R $USER:$USER /zap
          sudo chmod -R 755 /zap

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:65413/'
          cmd_options: '-I'
          rules_file_name: '.zap/rules.tsv'
          allow_issue_writing: false
          fail_action: false

      - name: Upload ZAP Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: zap-results
          path: |
            zap-*
            *.html
          retention-days: 5